{% from 'utils.F90.jinja2' import for_loop_prologue, for_loop_epilogue, OMP_END with context%}

program {{name}}

    {% set is_cmplx = (T_category == "complex") %}

    implicit none

    {{T}}, ALLOCATABLE :: A(:) 
    {{T}}, ALLOCATABLE :: B(:)
    {% if is_cmplx %}
    REAL, ALLOCATABLE :: B_real(:)
    REAL, ALLOCATABLE :: B_imag(:)
    {%endif%}

  {% for l in loops %}
    INTEGER :: {{ l.N }} = {{l.v}}
    INTEGER :: {{ l.i }} 
  {%- endfor %}
    INTEGER :: idx

    INTEGER :: S
    S = {{size}}
     
    ALLOCATE(A(S), B(S) {% if is_cmplx %}, B_real(S), B_imag(S) {%endif%} )
       
    {% if is_cmplx %}
    CALL RANDOM_NUMBER(B_real)
    CALL RANDOM_NUMBER(B_imag)
    B = cmplx(B_real,B_imag)
    DEALLOCATE (B_real,B_imag)
    {% else %}
    CALL RANDOM_NUMBER(B)
    {% endif %}

    {% for fat_pragma in fat_path %}
    !$OMP {{fat_pragma["pragma"]}} {% if "target" in fat_pragma %}  MAP(FROM: A) MAP(TO: B) {% endif %}
    {%- if n_collapse >= 1 and  "loop" in fat_pragma %} COLLAPSE({{n_collapse}}) {% endif %}
    {{ for_loop_prologue(fat_pragma) }}
    {% endfor %}
    idx = {{index}}    
    A( idx ) = B( idx )
 
    {% for fat_pragma in fat_path | reverse %} 
    {{ for_loop_epilogue(fat_pragma) }}
    {{ OMP_END(fat_pragma) }}
    {% endfor %}

    IF (ANY(ABS(A - B) > EPSILON( {% if is_cmplx %} REAL( {%endif%} B {% if is_cmplx %} ) {%endif%} ) )) THEN
        WRITE(*,*)  'Wrong value', MAXVAL(ABS(A-B)), 'max difference'
        CALL EXIT(112)
    ENDIF

    DEALLOCATE(A,B)

end program {{name}}
