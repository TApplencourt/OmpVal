{% from 'utils.f90.jinja2' import prologue_general, prologue_function, epilogue_function with context%}

{{ prologue_general() }}

PROGRAM {{name}}
    
    {{ prologue_function(loops, only_teams, only_parallel) }}
 
    {% for fat_pragma in fat_path %}
    !$OMP {{fat_pragma["pragma"]}} {% if "target" in fat_pragma %}  MAP(TOFROM: counter) {% endif %}

{% if "loop" in fat_pragma %}
    DO {{fat_pragma["loop"].i}} = 1 , {{fat_pragma["loop"].N}} 
{% endif %}

    {% if "only_teams" in fat_pragma %}
    num_teams = omp_get_num_teams()
    {% elif "only_parallel" in fat_pragma %}
    num_threads = omp_get_num_threads()
    {% endif %}

    {% endfor %}

!$OMP ATOMIC UPDATE
{% if balenced %}
counter = counter + 1.
{% elif only_teams and only_parallel %}
counter = counter + 1./(num_teams*num_threads)
{% elif only_teams  %}
counter = counter + 1./num_teams
{% elif only_parallel  %}
counter =  counter +1./num_threads
{% endif %}
 
    {% for fat_pragma in fat_path | reverse %} 
{% if "loop" in fat_pragma %}
    END DO
{% endif %}
    !$OMP END {{fat_pragma["pragma"]}}
    {% endfor %}

    {{ epilogue_function('counter', expected_value) }}
END PROGRAM {{name}}

