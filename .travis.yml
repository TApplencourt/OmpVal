dist: bionic
os: linux

git:
    submodules: false


jobs:
  include:
  - name: unittest
    script:
    - python3 -m unittest src/display.py

  - name: gcc
    env: 
      - CXX='g++'
      - CXXFLAGS='-std=c++2a -Wall -Wno-unknown-pragmas'
    addons:
      apt:
       sources:
         - ubuntu-toolchain-r-test
       packages:
        - g++-9 
        - gfortran-9
        - python3

    script:   
    - FC='gfortan' FFLAGS='-Wall -Wno-unknown-pragmas' MAKEFLAGS='-j8 --output-sync=target' ./ovo.sh run
    - ./ovo.sh report

  - name: clang 10 omp
    addons:
      apt:
       sources:
         - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main'
           key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
       packages:
        - clang-10 
        - python3

    before_install:
    - export LD_LIBRARY_PATH=/usr/local/clang/lib:$LD_LIBRARY_PATH

    script:   
    - CXX='clang++' CXXFLAGS='-std=c++20 -fopenmp -fopenmp-version=50' MAKEFLAGS='-j8 --output-sync=target' ./ovo.sh run test_src/cpp/
    - ./ovo.sh report

  - name: icc omp
    install:
    - source /opt/intel/inteloneapi/compiler/latest/env/vars.sh
    addons:
      apt:
        sources:
        - sourceline: 'deb https://apt.repos.intel.com/oneapi all main'
          key_url: 'https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB'
        packages:
        - intel-oneapi-icc
        - python3

    script:   
    - CXX='icc -qnextgen' CXXFLAGS='-std=c++11 -fopenmp -fopenmp-version=50' FC='ifort -qnextgen' FFLAGS='-std=c++11 -fopenmp -fopenmp-version=50' MAKEFLAGS='-j8 --output-sync=target' ./ovo.sh run
    - ./ovo.sh report


  - name: XL omp
    arch:
    - ppc64le

    install:
    - wget -q https://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/public.gpg -O- | sudo apt-key add -
    - echo "deb https://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/ ${TRAVIS_DIST} main" >> /etc/apt/sources.list
    - sudo apt-get update
    - export XLC_VERSION="$(apt-cache search '^xlc\.[0-9]+\.[0-9]+\.[0-9]+$' | awk '{ print substr($1, 5) }')"
    - sudo apt-get install "xlc.${XLC_VERSION}" "xlc-license-community.${XLC_VERSION}"
    - sudo /opt/ibm/xlC/${XLC_VERSION}/bin/xlc_configure <<< 1 >/dev/null

    script:   
    - CXX='xlc++' CXXFLAGS='-std=c++11 -qsmp=omp' FC='xlf90'  FFLAGS='-qsmp=omp' ./ovo.sh run --no_loop test_src/cpp/hierarchical_parallelism/ 
    - ./ovo.sh report

  - name: "pgcc"
    
    install:
    - curl 'https://raw.githubusercontent.com/nemequ/pgi-travis/master/install-pgi.sh' | /bin/sh
    
    script:
    - CXX=pgc++ CXXFLAGS='â€‘std=c++17 -mp' FC='pgfortran' FXXFLAGS='-mp' ./ovo.sh run
    - ./ovo.sh report