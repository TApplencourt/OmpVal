dist: bionic
os: linux

git:
    submodules: false

jobs:
  include:
  - name: unittest
    script:
    - python3 -m unittest src/display.py

  - name: gcc
    env: 
      - CXX='g++'
      - CXXFLAGS='-std=c++17'
      - FC='gfortan'
      - FFLAGS='-Wall -Wno-unknown-pragmas'
      - MAKEFLAGS='-j8 --output-sync=target' 
    addons:
      apt:
        - sourceline: "ppa:ubuntu-toolchain-r/test"
          key_url: https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x60c317803a41ba51845e371a1e9377a2ba9ef27f
       packages:
        - g++-9 
        - gfortran-9
        - python3

    script:   
    - ./ovo.sh run
    - ./ovo.sh report

  - name: clang 10 omp
    env: 
      - CXX='clang++'
      - CXXFLAGS='-std=c++17 -fopenmp -fopenmp-version=50'
      - MAKEFLAGS='-j8 --output-sync=target' 
    addons:
      apt:
       sources:
         - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
           key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
       packages:
        - clang-10
        - python3

    before_install:
    - export LD_LIBRARY_PATH=/usr/local/clang/lib:$LD_LIBRARY_PATH

    script:   
    - ./ovo.sh run test_src/cpp/
    - ./ovo.sh report

  - name: intel
    env: 
      - CXX='icc'
      - CXXFLAGS='-std=c++17 -wd3180'
      - FC='ifort'
      - FFLAGS=''
      - MAKEFLAGS='-j8 --output-sync=target' 
    install:
    - source /opt/intel/inteloneapi/compiler/latest/env/vars.sh
    addons:
      apt:
        sources:
        - sourceline: 'deb https://apt.repos.intel.com/oneapi all main'
          key_url: 'https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB'
        packages:
        - intel-oneapi-icc
        - intel-oneapi-ifort
        - python3

    script:   
    - ./ovo.sh run
    - ./ovo.sh report

  - name: intel qnextgen omp
    env: 
      - CXX='icc -qnextgen'
      - CXXFLAGS='-std=c++17 -fopenmp -fopenmp-version=50'
      - FC='ifort -qnextgen'
      - FFLAGS='-fopenmp -fopenmp-version=50'
      - MAKEFLAGS='-j8 --output-sync=target' 
    install:
    - source /opt/intel/inteloneapi/compiler/latest/env/vars.sh
    addons:
      apt:
        sources:
        - sourceline: 'deb https://apt.repos.intel.com/oneapi all main'
          key_url: 'https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB'
        packages:
        - intel-oneapi-icc
        - intel-oneapi-ifort
        - python3

    script:   
    - ./ovo.sh run
    - ./ovo.sh report

  - name: XL omp
    env:
      - CXX='xlc++'
      - CXXFLAGS='-std=c++11 -qsmp=omp'
      - FC='xlf90'
      - FFLAGS='-qsmp=omp'
      - MAKEFLAGS='-j8 --output-sync=target' 
    arch:
    - ppc64le
    install:
    - wget -q https://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/public.gpg -O- | sudo apt-key add -
    - echo "deb https://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/ ${TRAVIS_DIST} main" >> /etc/apt/sources.list
    - sudo apt-get update
    - export XLC_VERSION="$(apt-cache search '^xlc\.[0-9]+\.[0-9]+\.[0-9]+$' | awk '{ print substr($1, 5) }')"
    - sudo apt-get install "xlc.${XLC_VERSION}" "xlc-license-community.${XLC_VERSION}"
    - sudo /opt/ibm/xlC/${XLC_VERSION}/bin/xlc_configure <<< 1 >/dev/null

    script:   
    - ./ovo.sh run 
    - ./ovo.sh report

  - name: pgi
    env:
      - CXX='pgc++'
      - CXXFLAGS='-std=c++17 -mp'
      - FC='pgfortran'
      - FFLAGS='-mp'
      - MAKEFLAGS='-j8 --output-sync=target' 
    install:
    - curl 'https://raw.githubusercontent.com/nemequ/pgi-travis/master/install-pgi.sh' | /bin/sh
  
    script:
    - ./ovo.sh run
    - ./ovo.sh report